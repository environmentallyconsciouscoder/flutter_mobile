// Mocks generated by Mockito 5.3.2 from annotations
// in limetrack/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i25;
import 'dart:ui' as _i26;

import 'package:appwrite/appwrite.dart' as _i18;
import 'package:appwrite/models.dart' as _i20;
import 'package:flutter/material.dart' as _i24;
import 'package:geolocator/geolocator.dart' as _i21;
import 'package:limetrack/models/address.dart' as _i2;
import 'package:limetrack/models/bin.dart' as _i3;
import 'package:limetrack/models/caddy.dart' as _i4;
import 'package:limetrack/models/carrier.dart' as _i6;
import 'package:limetrack/models/carrier_vehicle.dart' as _i5;
import 'package:limetrack/models/licence.dart' as _i7;
import 'package:limetrack/models/lookup.dart' as _i8;
import 'package:limetrack/models/network.dart' as _i9;
import 'package:limetrack/models/processor.dart' as _i11;
import 'package:limetrack/models/processor_site.dart' as _i10;
import 'package:limetrack/models/producer.dart' as _i15;
import 'package:limetrack/models/producer_existing_contract.dart' as _i12;
import 'package:limetrack/models/producer_site.dart' as _i14;
import 'package:limetrack/models/producer_site_user.dart' as _i13;
import 'package:limetrack/models/transfer.dart' as _i17;
import 'package:limetrack/models/transfer_note.dart' as _i16;
import 'package:limetrack/services/collection_service.dart' as _i27;
import 'package:limetrack/services/database_service.dart' as _i19;
import 'package:limetrack/services/environment_service.dart' as _i28;
import 'package:limetrack/services/location_service.dart' as _i29;
import 'package:limetrack/services/upgrader_service.dart' as _i30;
import 'package:mockito/mockito.dart' as _i1;
import 'package:stacked_services/stacked_services.dart' as _i23;
import 'package:upgrader/upgrader.dart' as _i22;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAddress_0 extends _i1.SmartFake implements _i2.Address {
  _FakeAddress_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBin_1 extends _i1.SmartFake implements _i3.Bin {
  _FakeBin_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCaddy_2 extends _i1.SmartFake implements _i4.Caddy {
  _FakeCaddy_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCarrierVehicle_3 extends _i1.SmartFake
    implements _i5.CarrierVehicle {
  _FakeCarrierVehicle_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCarrier_4 extends _i1.SmartFake implements _i6.Carrier {
  _FakeCarrier_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLicence_5 extends _i1.SmartFake implements _i7.Licence {
  _FakeLicence_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLookup_6 extends _i1.SmartFake implements _i8.Lookup {
  _FakeLookup_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNetwork_7 extends _i1.SmartFake implements _i9.Network {
  _FakeNetwork_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProcessorSite_8 extends _i1.SmartFake implements _i10.ProcessorSite {
  _FakeProcessorSite_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProcessor_9 extends _i1.SmartFake implements _i11.Processor {
  _FakeProcessor_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProducerExistingContract_10 extends _i1.SmartFake
    implements _i12.ProducerExistingContract {
  _FakeProducerExistingContract_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProducerSiteUser_11 extends _i1.SmartFake
    implements _i13.ProducerSiteUser {
  _FakeProducerSiteUser_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProducerSite_12 extends _i1.SmartFake implements _i14.ProducerSite {
  _FakeProducerSite_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProducer_13 extends _i1.SmartFake implements _i15.Producer {
  _FakeProducer_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransferNote_14 extends _i1.SmartFake implements _i16.TransferNote {
  _FakeTransferNote_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransfer_15 extends _i1.SmartFake implements _i17.Transfer {
  _FakeTransfer_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClient_16 extends _i1.SmartFake implements _i18.Client {
  _FakeClient_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAccount_17 extends _i1.SmartFake implements _i18.Account {
  _FakeAccount_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTeams_18 extends _i1.SmartFake implements _i18.Teams {
  _FakeTeams_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabases_19 extends _i1.SmartFake implements _i18.Databases {
  _FakeDatabases_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStorage_20 extends _i1.SmartFake implements _i18.Storage {
  _FakeStorage_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFunctions_21 extends _i1.SmartFake implements _i18.Functions {
  _FakeFunctions_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocale_22 extends _i1.SmartFake implements _i18.Locale {
  _FakeLocale_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAppwriteAuthResult_23 extends _i1.SmartFake
    implements _i19.AppwriteAuthResult {
  _FakeAppwriteAuthResult_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAccount_24 extends _i1.SmartFake implements _i20.Account {
  _FakeAccount_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePosition_25 extends _i1.SmartFake implements _i21.Position {
  _FakePosition_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAppcastConfiguration_26 extends _i1.SmartFake
    implements _i22.AppcastConfiguration {
  _FakeAppcastConfiguration_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpgraderMessages_27 extends _i1.SmartFake
    implements _i22.UpgraderMessages {
  _FakeUpgraderMessages_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i23.NavigationService {
  @override
  String get previousRoute => (super.noSuchMethod(
        Invocation.getter(#previousRoute),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get currentRoute => (super.noSuchMethod(
        Invocation.getter(#currentRoute),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i24.GlobalKey<_i24.NavigatorState>? nestedNavigationKey(int? index) =>
      (super.noSuchMethod(
        Invocation.method(
          #nestedNavigationKey,
          [index],
        ),
        returnValueForMissingStub: null,
      ) as _i24.GlobalKey<_i24.NavigatorState>?);
  @override
  void config({
    bool? enableLog,
    bool? defaultPopGesture,
    bool? defaultOpaqueRoute,
    Duration? defaultDurationTransition,
    bool? defaultGlobalState,
    _i23.Transition? defaultTransitionStyle,
    String? defaultTransition,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #config,
          [],
          {
            #enableLog: enableLog,
            #defaultPopGesture: defaultPopGesture,
            #defaultOpaqueRoute: defaultOpaqueRoute,
            #defaultDurationTransition: defaultDurationTransition,
            #defaultGlobalState: defaultGlobalState,
            #defaultTransitionStyle: defaultTransitionStyle,
            #defaultTransition: defaultTransition,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<T?>? navigateWithTransition<T>(
    _i24.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i24.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i23.Transition? transitionClass,
    _i23.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i25.Future<T?>?);
  @override
  _i25.Future<T?>? replaceWithTransition<T>(
    _i24.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i24.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i23.Transition? transitionClass,
    _i23.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i25.Future<T?>?);
  @override
  bool back<T>({
    dynamic result,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #back,
          [],
          {
            #result: result,
            #id: id,
          },
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void popUntil(
    _i24.RoutePredicate? predicate, {
    int? id,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #popUntil,
          [predicate],
          {#id: id},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void popRepeated(int? popTimes) => super.noSuchMethod(
        Invocation.method(
          #popRepeated,
          [popTimes],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<T?>? navigateTo<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i24.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateTo,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i25.Future<T?>?);
  @override
  _i25.Future<T?>? navigateToView<T>(
    _i24.Widget? view, {
    dynamic arguments,
    int? id,
    bool? opaque,
    _i24.Curve? curve,
    Duration? duration,
    bool? fullscreenDialog = false,
    bool? popGesture,
    bool? preventDuplicates = true,
    _i23.Transition? transition,
    _i23.Transition? transitionStyle,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToView,
          [view],
          {
            #arguments: arguments,
            #id: id,
            #opaque: opaque,
            #curve: curve,
            #duration: duration,
            #fullscreenDialog: fullscreenDialog,
            #popGesture: popGesture,
            #preventDuplicates: preventDuplicates,
            #transition: transition,
            #transitionStyle: transitionStyle,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i25.Future<T?>?);
  @override
  _i25.Future<T?>? replaceWith<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i24.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWith,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i25.Future<T?>?);
  @override
  _i25.Future<T?>? clearStackAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i25.Future<T?>?);
  @override
  _i25.Future<T?>? clearStackAndShowView<T>(
    _i24.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i25.Future<T?>?);
  @override
  _i25.Future<T?>? clearTillFirstAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i25.Future<T?>?);
  @override
  _i25.Future<T?>? clearTillFirstAndShowView<T>(
    _i24.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i25.Future<T?>?);
  @override
  _i25.Future<T?>? pushNamedAndRemoveUntil<T>(
    String? routeName, {
    _i24.RoutePredicate? predicate,
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNamedAndRemoveUntil,
          [routeName],
          {
            #predicate: predicate,
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i25.Future<T?>?);
}

/// A class which mocks [BottomSheetService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBottomSheetService extends _i1.Mock
    implements _i23.BottomSheetService {
  @override
  void setCustomSheetBuilders(Map<dynamic, _i23.SheetBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #setCustomSheetBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<_i23.SheetResponse<dynamic>?> showBottomSheet({
    required String? title,
    String? description,
    String? confirmButtonTitle = r'Ok',
    String? cancelButtonTitle,
    bool? enableDrag = true,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showBottomSheet,
          [],
          {
            #title: title,
            #description: description,
            #confirmButtonTitle: confirmButtonTitle,
            #cancelButtonTitle: cancelButtonTitle,
            #enableDrag: enableDrag,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i25.Future<_i23.SheetResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i25.Future<_i23.SheetResponse<dynamic>?>.value(),
      ) as _i25.Future<_i23.SheetResponse<dynamic>?>);
  @override
  _i25.Future<_i23.SheetResponse<T>?> showCustomSheet<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i26.Color? barrierColor = const _i26.Color(2315255808),
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    String? barrierLabel = r'',
    dynamic customData,
    R? data,
    bool? enableDrag = true,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomSheet,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #barrierLabel: barrierLabel,
            #customData: customData,
            #data: data,
            #enableDrag: enableDrag,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i25.Future<_i23.SheetResponse<T>?>.value(),
        returnValueForMissingStub: _i25.Future<_i23.SheetResponse<T>?>.value(),
      ) as _i25.Future<_i23.SheetResponse<T>?>);
  @override
  void completeSheet(_i23.SheetResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeSheet,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogService extends _i1.Mock implements _i23.DialogService {
  @override
  void registerCustomDialogBuilders(
          Map<dynamic, _i23.DialogBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void registerCustomDialogBuilder({
    required dynamic variant,
    required _i24.Widget Function(
      _i24.BuildContext,
      _i23.DialogRequest<dynamic>,
      dynamic Function(_i23.DialogResponse<dynamic>),
    )?
        builder,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilder,
          [],
          {
            #variant: variant,
            #builder: builder,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.Future<_i23.DialogResponse<dynamic>?> showDialog({
    String? title,
    String? description,
    String? cancelTitle,
    _i26.Color? cancelTitleColor,
    String? buttonTitle = r'Ok',
    _i26.Color? buttonTitleColor,
    bool? barrierDismissible = false,
    _i23.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #buttonTitle: buttonTitle,
            #buttonTitleColor: buttonTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i25.Future<_i23.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i25.Future<_i23.DialogResponse<dynamic>?>.value(),
      ) as _i25.Future<_i23.DialogResponse<dynamic>?>);
  @override
  _i25.Future<_i23.DialogResponse<T>?> showCustomDialog<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i26.Color? barrierColor = const _i26.Color(2315255808),
    bool? barrierDismissible = false,
    String? barrierLabel = r'',
    dynamic customData,
    R? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomDialog,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #barrierLabel: barrierLabel,
            #customData: customData,
            #data: data,
          },
        ),
        returnValue: _i25.Future<_i23.DialogResponse<T>?>.value(),
        returnValueForMissingStub: _i25.Future<_i23.DialogResponse<T>?>.value(),
      ) as _i25.Future<_i23.DialogResponse<T>?>);
  @override
  _i25.Future<_i23.DialogResponse<dynamic>?> showConfirmationDialog({
    String? title,
    String? description,
    String? cancelTitle = r'Cancel',
    String? confirmationTitle = r'Ok',
    bool? barrierDismissible = false,
    _i23.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showConfirmationDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #confirmationTitle: confirmationTitle,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i25.Future<_i23.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i25.Future<_i23.DialogResponse<dynamic>?>.value(),
      ) as _i25.Future<_i23.DialogResponse<dynamic>?>);
  @override
  void completeDialog(_i23.DialogResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeDialog,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CollectionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCollectionService extends _i1.Mock implements _i27.CollectionService {
  @override
  set team(_i20.Team? _team) => super.noSuchMethod(
        Invocation.setter(
          #team,
          _team,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set producerSites(List<_i14.ProducerSite>? _producerSites) =>
      super.noSuchMethod(
        Invocation.setter(
          #producerSites,
          _producerSites,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set producers(List<_i15.Producer>? _producers) => super.noSuchMethod(
        Invocation.setter(
          #producers,
          _producers,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get totalWeighed => (super.noSuchMethod(
        Invocation.getter(#totalWeighed),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  set totalWeighed(int? _totalWeighed) => super.noSuchMethod(
        Invocation.setter(
          #totalWeighed,
          _totalWeighed,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get totalCollectedWeight => (super.noSuchMethod(
        Invocation.getter(#totalCollectedWeight),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  set totalCollectedWeight(int? _totalCollectedWeight) => super.noSuchMethod(
        Invocation.setter(
          #totalCollectedWeight,
          _totalCollectedWeight,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set lastWeighed(_i17.Transfer? _lastWeighed) => super.noSuchMethod(
        Invocation.setter(
          #lastWeighed,
          _lastWeighed,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set lastDeposited(_i17.Transfer? _lastDeposited) => super.noSuchMethod(
        Invocation.setter(
          #lastDeposited,
          _lastDeposited,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set lastCollected(_i17.Transfer? _lastCollected) => super.noSuchMethod(
        Invocation.setter(
          #lastCollected,
          _lastCollected,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set nearestBinShareAddress(_i2.Address? _nearestBinShareAddress) =>
      super.noSuchMethod(
        Invocation.setter(
          #nearestBinShareAddress,
          _nearestBinShareAddress,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set account(_i20.Account? value) => super.noSuchMethod(
        Invocation.setter(
          #account,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isLoggedIn),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get hasTeam => (super.noSuchMethod(
        Invocation.getter(#hasTeam),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  Map<String, String> get collectionLookups => (super.noSuchMethod(
        Invocation.getter(#collectionLookups),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);
  @override
  _i25.Future<void> initialise() => (super.noSuchMethod(
        Invocation.method(
          #initialise,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> refreshDashboardData() => (super.noSuchMethod(
        Invocation.method(
          #refreshDashboardData,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> getCollectionLookups() => (super.noSuchMethod(
        Invocation.method(
          #getCollectionLookups,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> getProducerSitesForUser() => (super.noSuchMethod(
        Invocation.method(
          #getProducerSitesForUser,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> recentActivity() => (super.noSuchMethod(
        Invocation.method(
          #recentActivity,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> getNearestBinShareAddress() => (super.noSuchMethod(
        Invocation.method(
          #getNearestBinShareAddress,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<_i3.Bin?> getBinFromCode({required String? code}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBinFromCode,
          [],
          {#code: code},
        ),
        returnValue: _i25.Future<_i3.Bin?>.value(),
        returnValueForMissingStub: _i25.Future<_i3.Bin?>.value(),
      ) as _i25.Future<_i3.Bin?>);
  @override
  _i25.Future<_i4.Caddy?> getCaddyFromCode({required String? code}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCaddyFromCode,
          [],
          {#code: code},
        ),
        returnValue: _i25.Future<_i4.Caddy?>.value(),
        returnValueForMissingStub: _i25.Future<_i4.Caddy?>.value(),
      ) as _i25.Future<_i4.Caddy?>);
  @override
  _i25.Future<List<_i2.Address>> listAddresses({List<String>? queries}) =>
      (super.noSuchMethod(
        Invocation.method(
          #listAddresses,
          [],
          {#queries: queries},
        ),
        returnValue: _i25.Future<List<_i2.Address>>.value(<_i2.Address>[]),
        returnValueForMissingStub:
            _i25.Future<List<_i2.Address>>.value(<_i2.Address>[]),
      ) as _i25.Future<List<_i2.Address>>);
  @override
  _i25.Future<_i2.Address> createAddress(_i2.Address? address) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAddress,
          [address],
        ),
        returnValue: _i25.Future<_i2.Address>.value(_FakeAddress_0(
          this,
          Invocation.method(
            #createAddress,
            [address],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i2.Address>.value(_FakeAddress_0(
          this,
          Invocation.method(
            #createAddress,
            [address],
          ),
        )),
      ) as _i25.Future<_i2.Address>);
  @override
  _i25.Future<_i2.Address> getAddress(String? documentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAddress,
          [documentId],
        ),
        returnValue: _i25.Future<_i2.Address>.value(_FakeAddress_0(
          this,
          Invocation.method(
            #getAddress,
            [documentId],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i2.Address>.value(_FakeAddress_0(
          this,
          Invocation.method(
            #getAddress,
            [documentId],
          ),
        )),
      ) as _i25.Future<_i2.Address>);
  @override
  _i25.Future<_i2.Address> updateAddress(_i2.Address? address) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAddress,
          [address],
        ),
        returnValue: _i25.Future<_i2.Address>.value(_FakeAddress_0(
          this,
          Invocation.method(
            #updateAddress,
            [address],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i2.Address>.value(_FakeAddress_0(
          this,
          Invocation.method(
            #updateAddress,
            [address],
          ),
        )),
      ) as _i25.Future<_i2.Address>);
  @override
  _i25.Future<void> deleteAddress(String? documentId) => (super.noSuchMethod(
        Invocation.method(
          #deleteAddress,
          [documentId],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<List<_i3.Bin>> listBins({List<String>? queries}) =>
      (super.noSuchMethod(
        Invocation.method(
          #listBins,
          [],
          {#queries: queries},
        ),
        returnValue: _i25.Future<List<_i3.Bin>>.value(<_i3.Bin>[]),
        returnValueForMissingStub:
            _i25.Future<List<_i3.Bin>>.value(<_i3.Bin>[]),
      ) as _i25.Future<List<_i3.Bin>>);
  @override
  _i25.Future<_i3.Bin> createBin(_i3.Bin? bin) => (super.noSuchMethod(
        Invocation.method(
          #createBin,
          [bin],
        ),
        returnValue: _i25.Future<_i3.Bin>.value(_FakeBin_1(
          this,
          Invocation.method(
            #createBin,
            [bin],
          ),
        )),
        returnValueForMissingStub: _i25.Future<_i3.Bin>.value(_FakeBin_1(
          this,
          Invocation.method(
            #createBin,
            [bin],
          ),
        )),
      ) as _i25.Future<_i3.Bin>);
  @override
  _i25.Future<_i3.Bin> getBin(String? documentId) => (super.noSuchMethod(
        Invocation.method(
          #getBin,
          [documentId],
        ),
        returnValue: _i25.Future<_i3.Bin>.value(_FakeBin_1(
          this,
          Invocation.method(
            #getBin,
            [documentId],
          ),
        )),
        returnValueForMissingStub: _i25.Future<_i3.Bin>.value(_FakeBin_1(
          this,
          Invocation.method(
            #getBin,
            [documentId],
          ),
        )),
      ) as _i25.Future<_i3.Bin>);
  @override
  _i25.Future<_i3.Bin> updateBin(_i3.Bin? bin) => (super.noSuchMethod(
        Invocation.method(
          #updateBin,
          [bin],
        ),
        returnValue: _i25.Future<_i3.Bin>.value(_FakeBin_1(
          this,
          Invocation.method(
            #updateBin,
            [bin],
          ),
        )),
        returnValueForMissingStub: _i25.Future<_i3.Bin>.value(_FakeBin_1(
          this,
          Invocation.method(
            #updateBin,
            [bin],
          ),
        )),
      ) as _i25.Future<_i3.Bin>);
  @override
  _i25.Future<void> deleteBin(String? documentId) => (super.noSuchMethod(
        Invocation.method(
          #deleteBin,
          [documentId],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<List<_i4.Caddy>> listCaddies({List<String>? queries}) =>
      (super.noSuchMethod(
        Invocation.method(
          #listCaddies,
          [],
          {#queries: queries},
        ),
        returnValue: _i25.Future<List<_i4.Caddy>>.value(<_i4.Caddy>[]),
        returnValueForMissingStub:
            _i25.Future<List<_i4.Caddy>>.value(<_i4.Caddy>[]),
      ) as _i25.Future<List<_i4.Caddy>>);
  @override
  _i25.Future<_i4.Caddy> createCaddy(_i4.Caddy? caddy) => (super.noSuchMethod(
        Invocation.method(
          #createCaddy,
          [caddy],
        ),
        returnValue: _i25.Future<_i4.Caddy>.value(_FakeCaddy_2(
          this,
          Invocation.method(
            #createCaddy,
            [caddy],
          ),
        )),
        returnValueForMissingStub: _i25.Future<_i4.Caddy>.value(_FakeCaddy_2(
          this,
          Invocation.method(
            #createCaddy,
            [caddy],
          ),
        )),
      ) as _i25.Future<_i4.Caddy>);
  @override
  _i25.Future<_i4.Caddy> getCaddy(String? documentId) => (super.noSuchMethod(
        Invocation.method(
          #getCaddy,
          [documentId],
        ),
        returnValue: _i25.Future<_i4.Caddy>.value(_FakeCaddy_2(
          this,
          Invocation.method(
            #getCaddy,
            [documentId],
          ),
        )),
        returnValueForMissingStub: _i25.Future<_i4.Caddy>.value(_FakeCaddy_2(
          this,
          Invocation.method(
            #getCaddy,
            [documentId],
          ),
        )),
      ) as _i25.Future<_i4.Caddy>);
  @override
  _i25.Future<_i4.Caddy> updateCaddy(_i4.Caddy? caddy) => (super.noSuchMethod(
        Invocation.method(
          #updateCaddy,
          [caddy],
        ),
        returnValue: _i25.Future<_i4.Caddy>.value(_FakeCaddy_2(
          this,
          Invocation.method(
            #updateCaddy,
            [caddy],
          ),
        )),
        returnValueForMissingStub: _i25.Future<_i4.Caddy>.value(_FakeCaddy_2(
          this,
          Invocation.method(
            #updateCaddy,
            [caddy],
          ),
        )),
      ) as _i25.Future<_i4.Caddy>);
  @override
  _i25.Future<void> deleteCaddy(String? documentId) => (super.noSuchMethod(
        Invocation.method(
          #deleteCaddy,
          [documentId],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<List<_i5.CarrierVehicle>> listCarrierVehicles(
          {List<String>? queries}) =>
      (super.noSuchMethod(
        Invocation.method(
          #listCarrierVehicles,
          [],
          {#queries: queries},
        ),
        returnValue:
            _i25.Future<List<_i5.CarrierVehicle>>.value(<_i5.CarrierVehicle>[]),
        returnValueForMissingStub:
            _i25.Future<List<_i5.CarrierVehicle>>.value(<_i5.CarrierVehicle>[]),
      ) as _i25.Future<List<_i5.CarrierVehicle>>);
  @override
  _i25.Future<_i5.CarrierVehicle> createCarrierVehicle(
          _i5.CarrierVehicle? carrierVehicle) =>
      (super.noSuchMethod(
        Invocation.method(
          #createCarrierVehicle,
          [carrierVehicle],
        ),
        returnValue:
            _i25.Future<_i5.CarrierVehicle>.value(_FakeCarrierVehicle_3(
          this,
          Invocation.method(
            #createCarrierVehicle,
            [carrierVehicle],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i5.CarrierVehicle>.value(_FakeCarrierVehicle_3(
          this,
          Invocation.method(
            #createCarrierVehicle,
            [carrierVehicle],
          ),
        )),
      ) as _i25.Future<_i5.CarrierVehicle>);
  @override
  _i25.Future<_i5.CarrierVehicle> getCarrierVehicle(String? documentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCarrierVehicle,
          [documentId],
        ),
        returnValue:
            _i25.Future<_i5.CarrierVehicle>.value(_FakeCarrierVehicle_3(
          this,
          Invocation.method(
            #getCarrierVehicle,
            [documentId],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i5.CarrierVehicle>.value(_FakeCarrierVehicle_3(
          this,
          Invocation.method(
            #getCarrierVehicle,
            [documentId],
          ),
        )),
      ) as _i25.Future<_i5.CarrierVehicle>);
  @override
  _i25.Future<_i5.CarrierVehicle> updateCarrierVehicle(
          _i5.CarrierVehicle? carrierVehicle) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCarrierVehicle,
          [carrierVehicle],
        ),
        returnValue:
            _i25.Future<_i5.CarrierVehicle>.value(_FakeCarrierVehicle_3(
          this,
          Invocation.method(
            #updateCarrierVehicle,
            [carrierVehicle],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i5.CarrierVehicle>.value(_FakeCarrierVehicle_3(
          this,
          Invocation.method(
            #updateCarrierVehicle,
            [carrierVehicle],
          ),
        )),
      ) as _i25.Future<_i5.CarrierVehicle>);
  @override
  _i25.Future<void> deleteCarrierVehicle(String? documentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteCarrierVehicle,
          [documentId],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<List<_i6.Carrier>> listCarriers({List<String>? queries}) =>
      (super.noSuchMethod(
        Invocation.method(
          #listCarriers,
          [],
          {#queries: queries},
        ),
        returnValue: _i25.Future<List<_i6.Carrier>>.value(<_i6.Carrier>[]),
        returnValueForMissingStub:
            _i25.Future<List<_i6.Carrier>>.value(<_i6.Carrier>[]),
      ) as _i25.Future<List<_i6.Carrier>>);
  @override
  _i25.Future<_i6.Carrier> createCarrier(_i6.Carrier? carrier) =>
      (super.noSuchMethod(
        Invocation.method(
          #createCarrier,
          [carrier],
        ),
        returnValue: _i25.Future<_i6.Carrier>.value(_FakeCarrier_4(
          this,
          Invocation.method(
            #createCarrier,
            [carrier],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i6.Carrier>.value(_FakeCarrier_4(
          this,
          Invocation.method(
            #createCarrier,
            [carrier],
          ),
        )),
      ) as _i25.Future<_i6.Carrier>);
  @override
  _i25.Future<_i6.Carrier> getCarrier(String? documentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCarrier,
          [documentId],
        ),
        returnValue: _i25.Future<_i6.Carrier>.value(_FakeCarrier_4(
          this,
          Invocation.method(
            #getCarrier,
            [documentId],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i6.Carrier>.value(_FakeCarrier_4(
          this,
          Invocation.method(
            #getCarrier,
            [documentId],
          ),
        )),
      ) as _i25.Future<_i6.Carrier>);
  @override
  _i25.Future<_i6.Carrier> updateCarrier(_i6.Carrier? carrier) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCarrier,
          [carrier],
        ),
        returnValue: _i25.Future<_i6.Carrier>.value(_FakeCarrier_4(
          this,
          Invocation.method(
            #updateCarrier,
            [carrier],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i6.Carrier>.value(_FakeCarrier_4(
          this,
          Invocation.method(
            #updateCarrier,
            [carrier],
          ),
        )),
      ) as _i25.Future<_i6.Carrier>);
  @override
  _i25.Future<void> deleteCarrier(String? documentId) => (super.noSuchMethod(
        Invocation.method(
          #deleteCarrier,
          [documentId],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<List<_i7.Licence>> listLicences({List<String>? queries}) =>
      (super.noSuchMethod(
        Invocation.method(
          #listLicences,
          [],
          {#queries: queries},
        ),
        returnValue: _i25.Future<List<_i7.Licence>>.value(<_i7.Licence>[]),
        returnValueForMissingStub:
            _i25.Future<List<_i7.Licence>>.value(<_i7.Licence>[]),
      ) as _i25.Future<List<_i7.Licence>>);
  @override
  _i25.Future<_i7.Licence> createLicence(_i7.Licence? licence) =>
      (super.noSuchMethod(
        Invocation.method(
          #createLicence,
          [licence],
        ),
        returnValue: _i25.Future<_i7.Licence>.value(_FakeLicence_5(
          this,
          Invocation.method(
            #createLicence,
            [licence],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i7.Licence>.value(_FakeLicence_5(
          this,
          Invocation.method(
            #createLicence,
            [licence],
          ),
        )),
      ) as _i25.Future<_i7.Licence>);
  @override
  _i25.Future<_i7.Licence> getLicence(String? documentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLicence,
          [documentId],
        ),
        returnValue: _i25.Future<_i7.Licence>.value(_FakeLicence_5(
          this,
          Invocation.method(
            #getLicence,
            [documentId],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i7.Licence>.value(_FakeLicence_5(
          this,
          Invocation.method(
            #getLicence,
            [documentId],
          ),
        )),
      ) as _i25.Future<_i7.Licence>);
  @override
  _i25.Future<_i7.Licence> updateLicence(_i7.Licence? licence) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLicence,
          [licence],
        ),
        returnValue: _i25.Future<_i7.Licence>.value(_FakeLicence_5(
          this,
          Invocation.method(
            #updateLicence,
            [licence],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i7.Licence>.value(_FakeLicence_5(
          this,
          Invocation.method(
            #updateLicence,
            [licence],
          ),
        )),
      ) as _i25.Future<_i7.Licence>);
  @override
  _i25.Future<void> deleteLicence(String? documentId) => (super.noSuchMethod(
        Invocation.method(
          #deleteLicence,
          [documentId],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<List<_i8.Lookup>> listLookups({List<String>? queries}) =>
      (super.noSuchMethod(
        Invocation.method(
          #listLookups,
          [],
          {#queries: queries},
        ),
        returnValue: _i25.Future<List<_i8.Lookup>>.value(<_i8.Lookup>[]),
        returnValueForMissingStub:
            _i25.Future<List<_i8.Lookup>>.value(<_i8.Lookup>[]),
      ) as _i25.Future<List<_i8.Lookup>>);
  @override
  _i25.Future<_i8.Lookup> getLookup(String? documentId) => (super.noSuchMethod(
        Invocation.method(
          #getLookup,
          [documentId],
        ),
        returnValue: _i25.Future<_i8.Lookup>.value(_FakeLookup_6(
          this,
          Invocation.method(
            #getLookup,
            [documentId],
          ),
        )),
        returnValueForMissingStub: _i25.Future<_i8.Lookup>.value(_FakeLookup_6(
          this,
          Invocation.method(
            #getLookup,
            [documentId],
          ),
        )),
      ) as _i25.Future<_i8.Lookup>);
  @override
  _i25.Future<List<_i9.Network>> listNetworks({List<String>? queries}) =>
      (super.noSuchMethod(
        Invocation.method(
          #listNetworks,
          [],
          {#queries: queries},
        ),
        returnValue: _i25.Future<List<_i9.Network>>.value(<_i9.Network>[]),
        returnValueForMissingStub:
            _i25.Future<List<_i9.Network>>.value(<_i9.Network>[]),
      ) as _i25.Future<List<_i9.Network>>);
  @override
  _i25.Future<_i9.Network> createNetwork(_i9.Network? network) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNetwork,
          [network],
        ),
        returnValue: _i25.Future<_i9.Network>.value(_FakeNetwork_7(
          this,
          Invocation.method(
            #createNetwork,
            [network],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i9.Network>.value(_FakeNetwork_7(
          this,
          Invocation.method(
            #createNetwork,
            [network],
          ),
        )),
      ) as _i25.Future<_i9.Network>);
  @override
  _i25.Future<_i9.Network> getNetwork(String? documentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNetwork,
          [documentId],
        ),
        returnValue: _i25.Future<_i9.Network>.value(_FakeNetwork_7(
          this,
          Invocation.method(
            #getNetwork,
            [documentId],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i9.Network>.value(_FakeNetwork_7(
          this,
          Invocation.method(
            #getNetwork,
            [documentId],
          ),
        )),
      ) as _i25.Future<_i9.Network>);
  @override
  _i25.Future<_i9.Network> updateNetwork(_i9.Network? network) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateNetwork,
          [network],
        ),
        returnValue: _i25.Future<_i9.Network>.value(_FakeNetwork_7(
          this,
          Invocation.method(
            #updateNetwork,
            [network],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i9.Network>.value(_FakeNetwork_7(
          this,
          Invocation.method(
            #updateNetwork,
            [network],
          ),
        )),
      ) as _i25.Future<_i9.Network>);
  @override
  _i25.Future<void> deleteNetwork(String? documentId) => (super.noSuchMethod(
        Invocation.method(
          #deleteNetwork,
          [documentId],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<List<_i10.ProcessorSite>> listProcessorSites(
          {List<String>? queries}) =>
      (super.noSuchMethod(
        Invocation.method(
          #listProcessorSites,
          [],
          {#queries: queries},
        ),
        returnValue:
            _i25.Future<List<_i10.ProcessorSite>>.value(<_i10.ProcessorSite>[]),
        returnValueForMissingStub:
            _i25.Future<List<_i10.ProcessorSite>>.value(<_i10.ProcessorSite>[]),
      ) as _i25.Future<List<_i10.ProcessorSite>>);
  @override
  _i25.Future<_i10.ProcessorSite> createProcessorSite(
          _i10.ProcessorSite? processorSite) =>
      (super.noSuchMethod(
        Invocation.method(
          #createProcessorSite,
          [processorSite],
        ),
        returnValue: _i25.Future<_i10.ProcessorSite>.value(_FakeProcessorSite_8(
          this,
          Invocation.method(
            #createProcessorSite,
            [processorSite],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i10.ProcessorSite>.value(_FakeProcessorSite_8(
          this,
          Invocation.method(
            #createProcessorSite,
            [processorSite],
          ),
        )),
      ) as _i25.Future<_i10.ProcessorSite>);
  @override
  _i25.Future<_i10.ProcessorSite> getProcessorSite(String? documentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProcessorSite,
          [documentId],
        ),
        returnValue: _i25.Future<_i10.ProcessorSite>.value(_FakeProcessorSite_8(
          this,
          Invocation.method(
            #getProcessorSite,
            [documentId],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i10.ProcessorSite>.value(_FakeProcessorSite_8(
          this,
          Invocation.method(
            #getProcessorSite,
            [documentId],
          ),
        )),
      ) as _i25.Future<_i10.ProcessorSite>);
  @override
  _i25.Future<_i10.ProcessorSite> updateProcessorSite(
          _i10.ProcessorSite? processorSite) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProcessorSite,
          [processorSite],
        ),
        returnValue: _i25.Future<_i10.ProcessorSite>.value(_FakeProcessorSite_8(
          this,
          Invocation.method(
            #updateProcessorSite,
            [processorSite],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i10.ProcessorSite>.value(_FakeProcessorSite_8(
          this,
          Invocation.method(
            #updateProcessorSite,
            [processorSite],
          ),
        )),
      ) as _i25.Future<_i10.ProcessorSite>);
  @override
  _i25.Future<void> deleteProcessorSite(String? documentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteProcessorSite,
          [documentId],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<List<_i11.Processor>> listProcessors({List<String>? queries}) =>
      (super.noSuchMethod(
        Invocation.method(
          #listProcessors,
          [],
          {#queries: queries},
        ),
        returnValue:
            _i25.Future<List<_i11.Processor>>.value(<_i11.Processor>[]),
        returnValueForMissingStub:
            _i25.Future<List<_i11.Processor>>.value(<_i11.Processor>[]),
      ) as _i25.Future<List<_i11.Processor>>);
  @override
  _i25.Future<_i11.Processor> createProcessor(_i11.Processor? processor) =>
      (super.noSuchMethod(
        Invocation.method(
          #createProcessor,
          [processor],
        ),
        returnValue: _i25.Future<_i11.Processor>.value(_FakeProcessor_9(
          this,
          Invocation.method(
            #createProcessor,
            [processor],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i11.Processor>.value(_FakeProcessor_9(
          this,
          Invocation.method(
            #createProcessor,
            [processor],
          ),
        )),
      ) as _i25.Future<_i11.Processor>);
  @override
  _i25.Future<_i11.Processor> getProcessor(String? documentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProcessor,
          [documentId],
        ),
        returnValue: _i25.Future<_i11.Processor>.value(_FakeProcessor_9(
          this,
          Invocation.method(
            #getProcessor,
            [documentId],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i11.Processor>.value(_FakeProcessor_9(
          this,
          Invocation.method(
            #getProcessor,
            [documentId],
          ),
        )),
      ) as _i25.Future<_i11.Processor>);
  @override
  _i25.Future<_i11.Processor> updateProcessor(_i11.Processor? processor) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProcessor,
          [processor],
        ),
        returnValue: _i25.Future<_i11.Processor>.value(_FakeProcessor_9(
          this,
          Invocation.method(
            #updateProcessor,
            [processor],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i11.Processor>.value(_FakeProcessor_9(
          this,
          Invocation.method(
            #updateProcessor,
            [processor],
          ),
        )),
      ) as _i25.Future<_i11.Processor>);
  @override
  _i25.Future<void> deleteProcessor(String? documentId) => (super.noSuchMethod(
        Invocation.method(
          #deleteProcessor,
          [documentId],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<List<_i12.ProducerExistingContract>>
      listProducerExistingContracts({List<String>? queries}) =>
          (super.noSuchMethod(
            Invocation.method(
              #listProducerExistingContracts,
              [],
              {#queries: queries},
            ),
            returnValue: _i25.Future<List<_i12.ProducerExistingContract>>.value(
                <_i12.ProducerExistingContract>[]),
            returnValueForMissingStub:
                _i25.Future<List<_i12.ProducerExistingContract>>.value(
                    <_i12.ProducerExistingContract>[]),
          ) as _i25.Future<List<_i12.ProducerExistingContract>>);
  @override
  _i25.Future<_i12.ProducerExistingContract> createProducerExistingContract(
          _i12.ProducerExistingContract? producerExistingContract) =>
      (super.noSuchMethod(
        Invocation.method(
          #createProducerExistingContract,
          [producerExistingContract],
        ),
        returnValue: _i25.Future<_i12.ProducerExistingContract>.value(
            _FakeProducerExistingContract_10(
          this,
          Invocation.method(
            #createProducerExistingContract,
            [producerExistingContract],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i12.ProducerExistingContract>.value(
                _FakeProducerExistingContract_10(
          this,
          Invocation.method(
            #createProducerExistingContract,
            [producerExistingContract],
          ),
        )),
      ) as _i25.Future<_i12.ProducerExistingContract>);
  @override
  _i25.Future<_i12.ProducerExistingContract> getProducerExistingContract(
          String? documentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProducerExistingContract,
          [documentId],
        ),
        returnValue: _i25.Future<_i12.ProducerExistingContract>.value(
            _FakeProducerExistingContract_10(
          this,
          Invocation.method(
            #getProducerExistingContract,
            [documentId],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i12.ProducerExistingContract>.value(
                _FakeProducerExistingContract_10(
          this,
          Invocation.method(
            #getProducerExistingContract,
            [documentId],
          ),
        )),
      ) as _i25.Future<_i12.ProducerExistingContract>);
  @override
  _i25.Future<_i12.ProducerExistingContract> updateProducerExistingContract(
          _i12.ProducerExistingContract? producerExistingContract) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProducerExistingContract,
          [producerExistingContract],
        ),
        returnValue: _i25.Future<_i12.ProducerExistingContract>.value(
            _FakeProducerExistingContract_10(
          this,
          Invocation.method(
            #updateProducerExistingContract,
            [producerExistingContract],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i12.ProducerExistingContract>.value(
                _FakeProducerExistingContract_10(
          this,
          Invocation.method(
            #updateProducerExistingContract,
            [producerExistingContract],
          ),
        )),
      ) as _i25.Future<_i12.ProducerExistingContract>);
  @override
  _i25.Future<void> deleteProducerExistingContract(String? documentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteProducerExistingContract,
          [documentId],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<List<_i13.ProducerSiteUser>> listProducerSiteUsers(
          {List<String>? queries}) =>
      (super.noSuchMethod(
        Invocation.method(
          #listProducerSiteUsers,
          [],
          {#queries: queries},
        ),
        returnValue: _i25.Future<List<_i13.ProducerSiteUser>>.value(
            <_i13.ProducerSiteUser>[]),
        returnValueForMissingStub:
            _i25.Future<List<_i13.ProducerSiteUser>>.value(
                <_i13.ProducerSiteUser>[]),
      ) as _i25.Future<List<_i13.ProducerSiteUser>>);
  @override
  _i25.Future<_i13.ProducerSiteUser> createProducerSiteUser(
          _i13.ProducerSiteUser? producerSiteUser) =>
      (super.noSuchMethod(
        Invocation.method(
          #createProducerSiteUser,
          [producerSiteUser],
        ),
        returnValue:
            _i25.Future<_i13.ProducerSiteUser>.value(_FakeProducerSiteUser_11(
          this,
          Invocation.method(
            #createProducerSiteUser,
            [producerSiteUser],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i13.ProducerSiteUser>.value(_FakeProducerSiteUser_11(
          this,
          Invocation.method(
            #createProducerSiteUser,
            [producerSiteUser],
          ),
        )),
      ) as _i25.Future<_i13.ProducerSiteUser>);
  @override
  _i25.Future<_i13.ProducerSiteUser> getProducerSiteUser(String? documentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProducerSiteUser,
          [documentId],
        ),
        returnValue:
            _i25.Future<_i13.ProducerSiteUser>.value(_FakeProducerSiteUser_11(
          this,
          Invocation.method(
            #getProducerSiteUser,
            [documentId],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i13.ProducerSiteUser>.value(_FakeProducerSiteUser_11(
          this,
          Invocation.method(
            #getProducerSiteUser,
            [documentId],
          ),
        )),
      ) as _i25.Future<_i13.ProducerSiteUser>);
  @override
  _i25.Future<_i13.ProducerSiteUser> updateProducerSiteUser(
          _i13.ProducerSiteUser? producerSiteUser) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProducerSiteUser,
          [producerSiteUser],
        ),
        returnValue:
            _i25.Future<_i13.ProducerSiteUser>.value(_FakeProducerSiteUser_11(
          this,
          Invocation.method(
            #updateProducerSiteUser,
            [producerSiteUser],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i13.ProducerSiteUser>.value(_FakeProducerSiteUser_11(
          this,
          Invocation.method(
            #updateProducerSiteUser,
            [producerSiteUser],
          ),
        )),
      ) as _i25.Future<_i13.ProducerSiteUser>);
  @override
  _i25.Future<void> deleteProducerSiteUser(String? documentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteProducerSiteUser,
          [documentId],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<List<_i14.ProducerSite>> listProducerSites(
          {List<String>? queries}) =>
      (super.noSuchMethod(
        Invocation.method(
          #listProducerSites,
          [],
          {#queries: queries},
        ),
        returnValue:
            _i25.Future<List<_i14.ProducerSite>>.value(<_i14.ProducerSite>[]),
        returnValueForMissingStub:
            _i25.Future<List<_i14.ProducerSite>>.value(<_i14.ProducerSite>[]),
      ) as _i25.Future<List<_i14.ProducerSite>>);
  @override
  _i25.Future<_i14.ProducerSite> createProducerSite(
          _i14.ProducerSite? producerSite) =>
      (super.noSuchMethod(
        Invocation.method(
          #createProducerSite,
          [producerSite],
        ),
        returnValue: _i25.Future<_i14.ProducerSite>.value(_FakeProducerSite_12(
          this,
          Invocation.method(
            #createProducerSite,
            [producerSite],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i14.ProducerSite>.value(_FakeProducerSite_12(
          this,
          Invocation.method(
            #createProducerSite,
            [producerSite],
          ),
        )),
      ) as _i25.Future<_i14.ProducerSite>);
  @override
  _i25.Future<_i14.ProducerSite> getProducerSite(String? documentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProducerSite,
          [documentId],
        ),
        returnValue: _i25.Future<_i14.ProducerSite>.value(_FakeProducerSite_12(
          this,
          Invocation.method(
            #getProducerSite,
            [documentId],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i14.ProducerSite>.value(_FakeProducerSite_12(
          this,
          Invocation.method(
            #getProducerSite,
            [documentId],
          ),
        )),
      ) as _i25.Future<_i14.ProducerSite>);
  @override
  _i25.Future<_i14.ProducerSite> updateProducerSite(
          _i14.ProducerSite? producerSite) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProducerSite,
          [producerSite],
        ),
        returnValue: _i25.Future<_i14.ProducerSite>.value(_FakeProducerSite_12(
          this,
          Invocation.method(
            #updateProducerSite,
            [producerSite],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i14.ProducerSite>.value(_FakeProducerSite_12(
          this,
          Invocation.method(
            #updateProducerSite,
            [producerSite],
          ),
        )),
      ) as _i25.Future<_i14.ProducerSite>);
  @override
  _i25.Future<void> deleteProducerSite(String? documentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteProducerSite,
          [documentId],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<List<_i15.Producer>> listProducers({List<String>? queries}) =>
      (super.noSuchMethod(
        Invocation.method(
          #listProducers,
          [],
          {#queries: queries},
        ),
        returnValue: _i25.Future<List<_i15.Producer>>.value(<_i15.Producer>[]),
        returnValueForMissingStub:
            _i25.Future<List<_i15.Producer>>.value(<_i15.Producer>[]),
      ) as _i25.Future<List<_i15.Producer>>);
  @override
  _i25.Future<_i15.Producer> createProducer(_i15.Producer? producer) =>
      (super.noSuchMethod(
        Invocation.method(
          #createProducer,
          [producer],
        ),
        returnValue: _i25.Future<_i15.Producer>.value(_FakeProducer_13(
          this,
          Invocation.method(
            #createProducer,
            [producer],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i15.Producer>.value(_FakeProducer_13(
          this,
          Invocation.method(
            #createProducer,
            [producer],
          ),
        )),
      ) as _i25.Future<_i15.Producer>);
  @override
  _i25.Future<_i15.Producer> getProducer(String? documentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProducer,
          [documentId],
        ),
        returnValue: _i25.Future<_i15.Producer>.value(_FakeProducer_13(
          this,
          Invocation.method(
            #getProducer,
            [documentId],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i15.Producer>.value(_FakeProducer_13(
          this,
          Invocation.method(
            #getProducer,
            [documentId],
          ),
        )),
      ) as _i25.Future<_i15.Producer>);
  @override
  _i25.Future<_i15.Producer> updateProducer(_i15.Producer? producer) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProducer,
          [producer],
        ),
        returnValue: _i25.Future<_i15.Producer>.value(_FakeProducer_13(
          this,
          Invocation.method(
            #updateProducer,
            [producer],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i15.Producer>.value(_FakeProducer_13(
          this,
          Invocation.method(
            #updateProducer,
            [producer],
          ),
        )),
      ) as _i25.Future<_i15.Producer>);
  @override
  _i25.Future<void> deleteProducer(String? documentId) => (super.noSuchMethod(
        Invocation.method(
          #deleteProducer,
          [documentId],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<List<_i16.TransferNote>> listTransferNotes(
          {List<String>? queries}) =>
      (super.noSuchMethod(
        Invocation.method(
          #listTransferNotes,
          [],
          {#queries: queries},
        ),
        returnValue:
            _i25.Future<List<_i16.TransferNote>>.value(<_i16.TransferNote>[]),
        returnValueForMissingStub:
            _i25.Future<List<_i16.TransferNote>>.value(<_i16.TransferNote>[]),
      ) as _i25.Future<List<_i16.TransferNote>>);
  @override
  _i25.Future<_i16.TransferNote> createTransferNote(
          _i16.TransferNote? transferNote) =>
      (super.noSuchMethod(
        Invocation.method(
          #createTransferNote,
          [transferNote],
        ),
        returnValue: _i25.Future<_i16.TransferNote>.value(_FakeTransferNote_14(
          this,
          Invocation.method(
            #createTransferNote,
            [transferNote],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i16.TransferNote>.value(_FakeTransferNote_14(
          this,
          Invocation.method(
            #createTransferNote,
            [transferNote],
          ),
        )),
      ) as _i25.Future<_i16.TransferNote>);
  @override
  _i25.Future<_i16.TransferNote> getTransferNote(String? documentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransferNote,
          [documentId],
        ),
        returnValue: _i25.Future<_i16.TransferNote>.value(_FakeTransferNote_14(
          this,
          Invocation.method(
            #getTransferNote,
            [documentId],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i16.TransferNote>.value(_FakeTransferNote_14(
          this,
          Invocation.method(
            #getTransferNote,
            [documentId],
          ),
        )),
      ) as _i25.Future<_i16.TransferNote>);
  @override
  _i25.Future<_i16.TransferNote> updateTransferNote(
          _i16.TransferNote? transferNote) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTransferNote,
          [transferNote],
        ),
        returnValue: _i25.Future<_i16.TransferNote>.value(_FakeTransferNote_14(
          this,
          Invocation.method(
            #updateTransferNote,
            [transferNote],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i16.TransferNote>.value(_FakeTransferNote_14(
          this,
          Invocation.method(
            #updateTransferNote,
            [transferNote],
          ),
        )),
      ) as _i25.Future<_i16.TransferNote>);
  @override
  _i25.Future<void> deleteTransferNote(String? documentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTransferNote,
          [documentId],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<List<_i17.Transfer>> listTransfers({List<String>? queries}) =>
      (super.noSuchMethod(
        Invocation.method(
          #listTransfers,
          [],
          {#queries: queries},
        ),
        returnValue: _i25.Future<List<_i17.Transfer>>.value(<_i17.Transfer>[]),
        returnValueForMissingStub:
            _i25.Future<List<_i17.Transfer>>.value(<_i17.Transfer>[]),
      ) as _i25.Future<List<_i17.Transfer>>);
  @override
  _i25.Future<_i17.Transfer> createTransfer(_i17.Transfer? transfer) =>
      (super.noSuchMethod(
        Invocation.method(
          #createTransfer,
          [transfer],
        ),
        returnValue: _i25.Future<_i17.Transfer>.value(_FakeTransfer_15(
          this,
          Invocation.method(
            #createTransfer,
            [transfer],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i17.Transfer>.value(_FakeTransfer_15(
          this,
          Invocation.method(
            #createTransfer,
            [transfer],
          ),
        )),
      ) as _i25.Future<_i17.Transfer>);
  @override
  _i25.Future<_i17.Transfer> getTransfer(String? documentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransfer,
          [documentId],
        ),
        returnValue: _i25.Future<_i17.Transfer>.value(_FakeTransfer_15(
          this,
          Invocation.method(
            #getTransfer,
            [documentId],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i17.Transfer>.value(_FakeTransfer_15(
          this,
          Invocation.method(
            #getTransfer,
            [documentId],
          ),
        )),
      ) as _i25.Future<_i17.Transfer>);
  @override
  _i25.Future<_i17.Transfer> updateTransfer(_i17.Transfer? transfer) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTransfer,
          [transfer],
        ),
        returnValue: _i25.Future<_i17.Transfer>.value(_FakeTransfer_15(
          this,
          Invocation.method(
            #updateTransfer,
            [transfer],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i17.Transfer>.value(_FakeTransfer_15(
          this,
          Invocation.method(
            #updateTransfer,
            [transfer],
          ),
        )),
      ) as _i25.Future<_i17.Transfer>);
  @override
  _i25.Future<void> deleteTransfer(String? documentId) => (super.noSuchMethod(
        Invocation.method(
          #deleteTransfer,
          [documentId],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
}

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i19.DatabaseService {
  @override
  _i18.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_16(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeClient_16(
          this,
          Invocation.getter(#client),
        ),
      ) as _i18.Client);
  @override
  _i18.Account get accounts => (super.noSuchMethod(
        Invocation.getter(#accounts),
        returnValue: _FakeAccount_17(
          this,
          Invocation.getter(#accounts),
        ),
        returnValueForMissingStub: _FakeAccount_17(
          this,
          Invocation.getter(#accounts),
        ),
      ) as _i18.Account);
  @override
  set accounts(_i18.Account? _accounts) => super.noSuchMethod(
        Invocation.setter(
          #accounts,
          _accounts,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i18.Teams get teams => (super.noSuchMethod(
        Invocation.getter(#teams),
        returnValue: _FakeTeams_18(
          this,
          Invocation.getter(#teams),
        ),
        returnValueForMissingStub: _FakeTeams_18(
          this,
          Invocation.getter(#teams),
        ),
      ) as _i18.Teams);
  @override
  set teams(_i18.Teams? _teams) => super.noSuchMethod(
        Invocation.setter(
          #teams,
          _teams,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i18.Databases get databases => (super.noSuchMethod(
        Invocation.getter(#databases),
        returnValue: _FakeDatabases_19(
          this,
          Invocation.getter(#databases),
        ),
        returnValueForMissingStub: _FakeDatabases_19(
          this,
          Invocation.getter(#databases),
        ),
      ) as _i18.Databases);
  @override
  set databases(_i18.Databases? _databases) => super.noSuchMethod(
        Invocation.setter(
          #databases,
          _databases,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i18.Storage get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeStorage_20(
          this,
          Invocation.getter(#storage),
        ),
        returnValueForMissingStub: _FakeStorage_20(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i18.Storage);
  @override
  set storage(_i18.Storage? _storage) => super.noSuchMethod(
        Invocation.setter(
          #storage,
          _storage,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i18.Functions get functions => (super.noSuchMethod(
        Invocation.getter(#functions),
        returnValue: _FakeFunctions_21(
          this,
          Invocation.getter(#functions),
        ),
        returnValueForMissingStub: _FakeFunctions_21(
          this,
          Invocation.getter(#functions),
        ),
      ) as _i18.Functions);
  @override
  set functions(_i18.Functions? _functions) => super.noSuchMethod(
        Invocation.setter(
          #functions,
          _functions,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i18.Locale get locale => (super.noSuchMethod(
        Invocation.getter(#locale),
        returnValue: _FakeLocale_22(
          this,
          Invocation.getter(#locale),
        ),
        returnValueForMissingStub: _FakeLocale_22(
          this,
          Invocation.getter(#locale),
        ),
      ) as _i18.Locale);
  @override
  set locale(_i18.Locale? _locale) => super.noSuchMethod(
        Invocation.setter(
          #locale,
          _locale,
        ),
        returnValueForMissingStub: null,
      );
  @override
  void initialise() => super.noSuchMethod(
        Invocation.method(
          #initialise,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  String friendlyErrorMessage(String? errorMessage) => (super.noSuchMethod(
        Invocation.method(
          #friendlyErrorMessage,
          [errorMessage],
        ),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i25.Future<_i20.Account?> getCurrentAccount() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentAccount,
          [],
        ),
        returnValue: _i25.Future<_i20.Account?>.value(),
        returnValueForMissingStub: _i25.Future<_i20.Account?>.value(),
      ) as _i25.Future<_i20.Account?>);
  @override
  _i25.Future<_i20.Preferences?> getAccountPreferences() => (super.noSuchMethod(
        Invocation.method(
          #getAccountPreferences,
          [],
        ),
        returnValue: _i25.Future<_i20.Preferences?>.value(),
        returnValueForMissingStub: _i25.Future<_i20.Preferences?>.value(),
      ) as _i25.Future<_i20.Preferences?>);
  @override
  _i25.Future<_i20.Team?> getAccountTeam() => (super.noSuchMethod(
        Invocation.method(
          #getAccountTeam,
          [],
        ),
        returnValue: _i25.Future<_i20.Team?>.value(),
        returnValueForMissingStub: _i25.Future<_i20.Team?>.value(),
      ) as _i25.Future<_i20.Team?>);
  @override
  _i25.Future<_i19.AppwriteAuthResult> registerWithEmail({
    required String? name,
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerWithEmail,
          [],
          {
            #name: name,
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i25.Future<_i19.AppwriteAuthResult>.value(
            _FakeAppwriteAuthResult_23(
          this,
          Invocation.method(
            #registerWithEmail,
            [],
            {
              #name: name,
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub: _i25.Future<_i19.AppwriteAuthResult>.value(
            _FakeAppwriteAuthResult_23(
          this,
          Invocation.method(
            #registerWithEmail,
            [],
            {
              #name: name,
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i25.Future<_i19.AppwriteAuthResult>);
  @override
  _i25.Future<_i19.AppwriteAuthResult> signInWithEmail({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmail,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i25.Future<_i19.AppwriteAuthResult>.value(
            _FakeAppwriteAuthResult_23(
          this,
          Invocation.method(
            #signInWithEmail,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub: _i25.Future<_i19.AppwriteAuthResult>.value(
            _FakeAppwriteAuthResult_23(
          this,
          Invocation.method(
            #signInWithEmail,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i25.Future<_i19.AppwriteAuthResult>);
  @override
  _i25.Future<_i19.AppwriteAuthResult> signInWithApple({
    required String? appleClientId,
    required String? appleRedirectUri,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithApple,
          [],
          {
            #appleClientId: appleClientId,
            #appleRedirectUri: appleRedirectUri,
          },
        ),
        returnValue: _i25.Future<_i19.AppwriteAuthResult>.value(
            _FakeAppwriteAuthResult_23(
          this,
          Invocation.method(
            #signInWithApple,
            [],
            {
              #appleClientId: appleClientId,
              #appleRedirectUri: appleRedirectUri,
            },
          ),
        )),
        returnValueForMissingStub: _i25.Future<_i19.AppwriteAuthResult>.value(
            _FakeAppwriteAuthResult_23(
          this,
          Invocation.method(
            #signInWithApple,
            [],
            {
              #appleClientId: appleClientId,
              #appleRedirectUri: appleRedirectUri,
            },
          ),
        )),
      ) as _i25.Future<_i19.AppwriteAuthResult>);
  @override
  _i25.Future<_i19.AppwriteAuthResult> signInWithGoogle() =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithGoogle,
          [],
        ),
        returnValue: _i25.Future<_i19.AppwriteAuthResult>.value(
            _FakeAppwriteAuthResult_23(
          this,
          Invocation.method(
            #signInWithGoogle,
            [],
          ),
        )),
        returnValueForMissingStub: _i25.Future<_i19.AppwriteAuthResult>.value(
            _FakeAppwriteAuthResult_23(
          this,
          Invocation.method(
            #signInWithGoogle,
            [],
          ),
        )),
      ) as _i25.Future<_i19.AppwriteAuthResult>);
  @override
  _i25.Future<_i19.AppwriteAuthResult> signInWithFacebook() =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithFacebook,
          [],
        ),
        returnValue: _i25.Future<_i19.AppwriteAuthResult>.value(
            _FakeAppwriteAuthResult_23(
          this,
          Invocation.method(
            #signInWithFacebook,
            [],
          ),
        )),
        returnValueForMissingStub: _i25.Future<_i19.AppwriteAuthResult>.value(
            _FakeAppwriteAuthResult_23(
          this,
          Invocation.method(
            #signInWithFacebook,
            [],
          ),
        )),
      ) as _i25.Future<_i19.AppwriteAuthResult>);
  @override
  _i25.Future<_i19.AppwriteAuthResult> signInWithMicrosoft() =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithMicrosoft,
          [],
        ),
        returnValue: _i25.Future<_i19.AppwriteAuthResult>.value(
            _FakeAppwriteAuthResult_23(
          this,
          Invocation.method(
            #signInWithMicrosoft,
            [],
          ),
        )),
        returnValueForMissingStub: _i25.Future<_i19.AppwriteAuthResult>.value(
            _FakeAppwriteAuthResult_23(
          this,
          Invocation.method(
            #signInWithMicrosoft,
            [],
          ),
        )),
      ) as _i25.Future<_i19.AppwriteAuthResult>);
  @override
  _i25.Future<void> signInWithMagicUrl({
    required String? accountId,
    required String? email,
    String? url = r'',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithMagicUrl,
          [],
          {
            #accountId: accountId,
            #email: email,
            #url: url,
          },
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<_i19.AppwriteAuthResult> magicUrlConfirmation({
    required String? accountId,
    required String? secret,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #magicUrlConfirmation,
          [],
          {
            #accountId: accountId,
            #secret: secret,
          },
        ),
        returnValue: _i25.Future<_i19.AppwriteAuthResult>.value(
            _FakeAppwriteAuthResult_23(
          this,
          Invocation.method(
            #magicUrlConfirmation,
            [],
            {
              #accountId: accountId,
              #secret: secret,
            },
          ),
        )),
        returnValueForMissingStub: _i25.Future<_i19.AppwriteAuthResult>.value(
            _FakeAppwriteAuthResult_23(
          this,
          Invocation.method(
            #magicUrlConfirmation,
            [],
            {
              #accountId: accountId,
              #secret: secret,
            },
          ),
        )),
      ) as _i25.Future<_i19.AppwriteAuthResult>);
  @override
  _i25.Future<_i20.Account?> updateAccountName({required String? name}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAccountName,
          [],
          {#name: name},
        ),
        returnValue: _i25.Future<_i20.Account?>.value(),
        returnValueForMissingStub: _i25.Future<_i20.Account?>.value(),
      ) as _i25.Future<_i20.Account?>);
  @override
  _i25.Future<_i20.Account> updatePassword({
    required String? newPassword,
    String? oldPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [],
          {
            #newPassword: newPassword,
            #oldPassword: oldPassword,
          },
        ),
        returnValue: _i25.Future<_i20.Account>.value(_FakeAccount_24(
          this,
          Invocation.method(
            #updatePassword,
            [],
            {
              #newPassword: newPassword,
              #oldPassword: oldPassword,
            },
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i20.Account>.value(_FakeAccount_24(
          this,
          Invocation.method(
            #updatePassword,
            [],
            {
              #newPassword: newPassword,
              #oldPassword: oldPassword,
            },
          ),
        )),
      ) as _i25.Future<_i20.Account>);
  @override
  _i25.Future<_i20.Account?> updateEmail({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEmail,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i25.Future<_i20.Account?>.value(),
        returnValueForMissingStub: _i25.Future<_i20.Account?>.value(),
      ) as _i25.Future<_i20.Account?>);
  @override
  _i25.Future<_i20.Account?> updateAccountPreferences(
          {required Map<dynamic, dynamic>? preferences}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAccountPreferences,
          [],
          {#preferences: preferences},
        ),
        returnValue: _i25.Future<_i20.Account?>.value(),
        returnValueForMissingStub: _i25.Future<_i20.Account?>.value(),
      ) as _i25.Future<_i20.Account?>);
  @override
  _i25.Future<void> blockAccount() => (super.noSuchMethod(
        Invocation.method(
          #blockAccount,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> logout({String? sessionId = r'current'}) =>
      (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
          {#sessionId: sessionId},
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<_i19.AppwriteAuthResult> updateSession(
          {String? sessionId = r'current'}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSession,
          [],
          {#sessionId: sessionId},
        ),
        returnValue: _i25.Future<_i19.AppwriteAuthResult>.value(
            _FakeAppwriteAuthResult_23(
          this,
          Invocation.method(
            #updateSession,
            [],
            {#sessionId: sessionId},
          ),
        )),
        returnValueForMissingStub: _i25.Future<_i19.AppwriteAuthResult>.value(
            _FakeAppwriteAuthResult_23(
          this,
          Invocation.method(
            #updateSession,
            [],
            {#sessionId: sessionId},
          ),
        )),
      ) as _i25.Future<_i19.AppwriteAuthResult>);
  @override
  _i25.Future<void> deleteSessions() => (super.noSuchMethod(
        Invocation.method(
          #deleteSessions,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> recoverPassword({
    required String? email,
    required String? url,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #recoverPassword,
          [],
          {
            #email: email,
            #url: url,
          },
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> recoverPasswordConfirmation({
    required String? accountId,
    required String? secret,
    required String? password,
    required String? passwordAgain,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #recoverPasswordConfirmation,
          [],
          {
            #accountId: accountId,
            #secret: secret,
            #password: password,
            #passwordAgain: passwordAgain,
          },
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> verifyEmail({required String? url}) => (super.noSuchMethod(
        Invocation.method(
          #verifyEmail,
          [],
          {#url: url},
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> verifyEmailConfirmation({
    required String? accountId,
    required String? secret,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyEmailConfirmation,
          [],
          {
            #accountId: accountId,
            #secret: secret,
          },
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<List<_i20.Membership>> getTeamList({required String? teamId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTeamList,
          [],
          {#teamId: teamId},
        ),
        returnValue:
            _i25.Future<List<_i20.Membership>>.value(<_i20.Membership>[]),
        returnValueForMissingStub:
            _i25.Future<List<_i20.Membership>>.value(<_i20.Membership>[]),
      ) as _i25.Future<List<_i20.Membership>>);
  @override
  _i25.Future<void> removeFromTeam({
    required String? teamId,
    required String? membershipId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromTeam,
          [],
          {
            #teamId: teamId,
            #membershipId: membershipId,
          },
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i25.Future<void> addToTeam({
    required String? ownerId,
    required String? teamId,
    required String? name,
    required String? email,
    required String? producerSiteId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToTeam,
          [],
          {
            #ownerId: ownerId,
            #teamId: teamId,
            #name: name,
            #email: email,
            #producerSiteId: producerSiteId,
          },
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
}

/// A class which mocks [EnvironmentService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEnvironmentService extends _i1.Mock
    implements _i28.EnvironmentService {
  @override
  _i25.Future<dynamic> initialise() => (super.noSuchMethod(
        Invocation.method(
          #initialise,
          [],
        ),
        returnValue: _i25.Future<dynamic>.value(),
        returnValueForMissingStub: _i25.Future<dynamic>.value(),
      ) as _i25.Future<dynamic>);
  @override
  String getValue(
    String? key, {
    String? fallback = r'NO_KEY',
    bool? verbose = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getValue,
          [key],
          {
            #fallback: fallback,
            #verbose: verbose,
          },
        ),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
}

/// A class which mocks [LocationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationService extends _i1.Mock implements _i29.LocationService {
  @override
  _i25.Future<_i21.Position> currentPosition() => (super.noSuchMethod(
        Invocation.method(
          #currentPosition,
          [],
        ),
        returnValue: _i25.Future<_i21.Position>.value(_FakePosition_25(
          this,
          Invocation.method(
            #currentPosition,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i25.Future<_i21.Position>.value(_FakePosition_25(
          this,
          Invocation.method(
            #currentPosition,
            [],
          ),
        )),
      ) as _i25.Future<_i21.Position>);
}

/// A class which mocks [UpgraderService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpgraderService extends _i1.Mock implements _i30.UpgraderService {
  @override
  _i22.AppcastConfiguration get appcastConfig => (super.noSuchMethod(
        Invocation.getter(#appcastConfig),
        returnValue: _FakeAppcastConfiguration_26(
          this,
          Invocation.getter(#appcastConfig),
        ),
        returnValueForMissingStub: _FakeAppcastConfiguration_26(
          this,
          Invocation.getter(#appcastConfig),
        ),
      ) as _i22.AppcastConfiguration);
  @override
  set appcastConfig(_i22.AppcastConfiguration? _appcastConfig) =>
      super.noSuchMethod(
        Invocation.setter(
          #appcastConfig,
          _appcastConfig,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isDevelopmentEnvironment => (super.noSuchMethod(
        Invocation.getter(#isDevelopmentEnvironment),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get isVerboseLogging => (super.noSuchMethod(
        Invocation.getter(#isVerboseLogging),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i25.Future<void> initialise() => (super.noSuchMethod(
        Invocation.method(
          #initialise,
          [],
        ),
        returnValue: _i25.Future<void>.value(),
        returnValueForMissingStub: _i25.Future<void>.value(),
      ) as _i25.Future<void>);
  @override
  _i22.UpgraderMessages customUpgraderMessages() => (super.noSuchMethod(
        Invocation.method(
          #customUpgraderMessages,
          [],
        ),
        returnValue: _FakeUpgraderMessages_27(
          this,
          Invocation.method(
            #customUpgraderMessages,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeUpgraderMessages_27(
          this,
          Invocation.method(
            #customUpgraderMessages,
            [],
          ),
        ),
      ) as _i22.UpgraderMessages);
}
